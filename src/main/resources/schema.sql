drop table IF EXISTS users_friendship;

drop table IF EXISTS users_likes;

drop table IF EXISTS users;

drop table IF EXISTS films_genre;

drop table IF EXISTS genre;

drop table IF EXISTS films;

drop table IF EXISTS mpa_rating;

drop table IF EXISTS EVENT_TYPE;

drop table IF EXISTS EVENT_OPERATION;

drop table IF EXISTS USER_EVENT;


create TABLE IF NOT EXISTS films (
    film_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    film_name varchar(50) NOT NULL,
    film_description varchar(200),
    film_release_date date,
    film_duration integer,
    mpa_rating_id integer
);

create TABLE IF NOT EXISTS mpa_rating (
    mpa_rating_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    mpa_rating_name varchar(10)
);

create TABLE IF NOT EXISTS genre (
    genre_id integer GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    genre_name varchar(50)
);

create TABLE IF NOT EXISTS films_genre (
    film_id bigint,
    genre_id integer,
    PRIMARY KEY (film_id, genre_id)
);

create TABLE IF NOT EXISTS users (
    user_id bigint GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_email varchar(50) NOT NULL,
    user_login varchar(50) NOT NULL,
    user_name varchar(50),
    user_birthday date NOT NULL
);

create TABLE IF NOT EXISTS users_likes (
    user_id bigint,
    film_id bigint,
    PRIMARY KEY (user_id, film_id)
);

create TABLE IF NOT EXISTS users_friendship (
    source_user_id bigint,
    target_user_id bigint,
    PRIMARY KEY (source_user_id, target_user_id)
);

create TABLE IF NOT EXISTS EVENT_TYPE (
    EVENT_TYPE_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(10)
);

create TABLE IF NOT EXISTS EVENT_OPERATION (
    EVENT_OPERATION_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    NAME VARCHAR(10)
);

create TABLE IF NOT EXISTS USER_EVENT (
    EVENT_ID INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    TIME_ADD BIGINT,
    USER_ID INTEGER REFERENCES users(user_id) ON delete CASCADE ON update CASCADE,
    EVENT_TYPE_ID INTEGER REFERENCES EVENT_TYPE(EVENT_TYPE_ID) ON delete CASCADE ON update CASCADE,
    EVENT_OPERATION_ID INTEGER REFERENCES EVENT_OPERATION(EVENT_OPERATION_ID) ON delete CASCADE ON update CASCADE,
    ENTITY_ID INTEGER
);

alter table films add FOREIGN KEY (mpa_rating_id) REFERENCES mpa_rating (mpa_rating_id) ON delete CASCADE;

alter table films_genre add FOREIGN KEY (film_id) REFERENCES films (film_id) ON delete CASCADE;

alter table films_genre add FOREIGN KEY (genre_id) REFERENCES genre (genre_id) ON delete CASCADE;

alter table users_likes add FOREIGN KEY (user_id) REFERENCES users (user_id) ON delete CASCADE;

alter table users_likes add FOREIGN KEY (film_id) REFERENCES films (film_id) ON delete CASCADE;

alter table users_friendship add FOREIGN KEY (source_user_id) REFERENCES users (user_id) ON delete CASCADE;

alter table users_friendship add FOREIGN KEY (target_user_id) REFERENCES users (user_id) ON delete CASCADE;

